<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>yycg</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
      </parent>

  <artifactId>yycgproject</artifactId>

  <packaging>war</packaging>


  <name>yycgproject Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>yycg</groupId>
      <artifactId>utils</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>yycg</groupId>
      <artifactId>springmybatis</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>


      <!--连接数据库===============================-->
   <!--   Oracle 的 ojdbc.jar 是收费的，Maven 中央库中实际上没有此资源
      如果已安装 Oracle 数据库产品，可以在安装目录
      （Oracle\app\oracle\product\11.2.0\server\jdbc\lib）下可以找到 JDBC 驱动
      添加到lib的jar包里-->

      <!-- dbcp -->
      <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.2.2</version>
      </dependency>

      <!-- servlet-api 编译时用 -->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
          <version>2.5</version>
          <scope>provided</scope>
      </dependency>
      <!-- jstl标签 -->
      <dependency>
          <groupId>jstl</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
      </dependency>
      <dependency>
          <groupId>taglibs</groupId>
          <artifactId>standard</artifactId>
          <version>1.1.2</version>
      </dependency>
      <!-- 文件上传 -->
      <dependency>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
          <version>1.2.2</version>
      </dependency>
      <!-- commons io -->
      <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <version>2.4</version>
      </dependency>
      <!-- json转换 springmvc返回json格式必须引入-->
      <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
          <version>1.9.11</version>
      </dependency>
      <!-- dwr -->
      <dependency>
          <groupId>org.directwebremoting</groupId>
          <artifactId>dwr</artifactId>
          <version>3.0.M1</version>
      </dependency>
      <!-- jfreechart -->
      <dependency>
          <groupId>org.jfree</groupId>
          <artifactId>jcommon</artifactId>
          <version>1.0.23</version>
      </dependency>
      <dependency>
          <artifactId>jfreechart</artifactId>
          <groupId>org.jfree</groupId>
          <version>1.0.19</version>
      </dependency>
  </dependencies>

  <build>
    <finalName>yycgproject</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>


           <!--将项目打成war，并自动启动tomcat，达到一键运行的目的-->
          <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <version>1.2.3</version>
              <configuration>
                  <container>
                      <containerId>tomcat9x</containerId>
                      <home>D:\tomcat9.0</home>
                  </container>
                  <configuration>
                      <type>existing</type>
                      <home>D:\tomcat9.0</home>
                  </configuration>
              </configuration>
              <executions>
                  <execution>
                      <id>cargo-run</id>
                      <phase>install</phase>
                      <goals>
                          <goal>run</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>
      </plugins>


    </pluginManagement>
  </build>
</project>
